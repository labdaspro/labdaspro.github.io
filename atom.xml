<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lab Pemrograman Dasar</title>
  <subtitle>Lab Pemrograman Universitas Dian Nuswantoro</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://labdaspro.github.io/"/>
  <updated>2017-06-07T11:30:43.000Z</updated>
  <id>http://labdaspro.github.io/</id>
  
  <author>
    <name>Fahri Firdausillah</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tipe Data Bentukan</title>
    <link href="http://labdaspro.github.io/2017/06/07/tipe-data-bentukan/"/>
    <id>http://labdaspro.github.io/2017/06/07/tipe-data-bentukan/</id>
    <published>2017-06-07T07:09:47.000Z</published>
    <updated>2017-06-07T11:30:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>Dalam perjalanan pembuatan program, ada kalanya kita memerlukan tipe data baru yang tidak terdefinisikan sebelumnya pada sebuah bahasa pemrograman. Misalkan untuk menyimpan nilai waktu kita memerlukan tiga variabel yang saling terhubung, yaitu tiga variabel dengan tipe data integer untuk meyimpan nilai jam, menit, dan detik. Jika menggunakan cara konvensional yaitu mendeklarasikan tiga variabel secara manual kemudian mengisikan nilainya, maka akan cukup merepotkan. Belum lagi jika data waktu yang perlu kita simpan dan manipulasi lebih dari satu dan perlu disimpan dengan menggunakan <em>array</em>.</p>
<a id="more"></a>
<h2 id="Deklarasi-Struktur"><a href="#Deklarasi-Struktur" class="headerlink" title="Deklarasi Struktur"></a>Deklarasi Struktur</h2><p>Sebagai solusi dari permasalahan tersebut, bahasa pemrograman biasanya menyediakan mekanisme khusus untuk membentuk tipe data baru dengan menggabungkan tipe data primitif yang sudah ada. Dalam bahasa pemrograman C, perintah yang digunakan untuk membentuk struktur tipe data baru adalah mengguanakan perintah <code>struct</code> yang diikuti nama tipe data dan komponen-komponen tipe datanya. Berikut adalah contoh pembuatan/deklarasi struktur tipe data <strong>time</strong> dengan menggunakan perintah <code>struct</code>:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">time</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> jam;</div><div class="line">    <span class="keyword">int</span> menit;</div><div class="line">    <span class="keyword">int</span> detik;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">time</span> <span class="title">var_time</span>;</span></div></pre></td></tr></table></figure>
<p>Pada contoh koding di atas, terlihat pada baris 1 - 4 cara deklarasi tipe data <strong>time</strong> dengan menggunakan perintah <code>struct</code> yang diikuti dengan nama struktur dan komponen tipe datanya. Sedangkan pada baris 6 ditunjukkan cara penggunaan struktur baru yang telah dideklarasikan adalah menggunakan perintah <code>struct</code> yang diikuti nama struktur dan nama variabelnya.</p>
<p>Setelah mendeklarasikan struktur serta variabelnya, kita dapat mengakses komponen dari tipe data tersebut dengan menggunakan operator <code>.</code> (titik) setelah nama variabelnya. Contoh pengaksesan komponen pada struktur sebagaimana ditunjukkan pada koding berikut:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">time</span> <span class="title">var_time</span>;</span></div><div class="line">var_time.jam = <span class="number">2</span>;</div><div class="line">var_time.menit = <span class="number">40</span>;</div><div class="line">var_time.detik = <span class="number">33</span>;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d:%d:%d"</span>, var_time.jam, var_time.menit, var_time.detik);</div></pre></td></tr></table></figure>
<p>Koding pada baris 2 - 4 mengakses komponen jam, menit, dan detik untuk mengisikan nilai pada komponen variabel tersebut, sedangkan pada baris 6 nilai yang telah diisikan diakses untuk dicetak menggunakan perintah <code>printf</code>.</p>
<p>Deklarasi variabel struct baru harus selalu menggunakan kata kunci <code>struct</code> untuk menunjukkan bahwa tipe data <code>time</code> adalah tipe data dalam bentuk struktur. Namun kita dapat mengguanakan perintah <code>typedef</code> untuk memberikan alias pada struktur tersebut sehingga kita dapat menggunakannya selayaknya tipe data primitif lain. Contoh penggunaan typdef ditunjukkan pada koding di bawah ini:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_time</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> jam;</div><div class="line">    <span class="keyword">int</span> menit;</div><div class="line">    <span class="keyword">int</span> detik;</div><div class="line">&#125; time;</div><div class="line"></div><div class="line">time new_time;</div></pre></td></tr></table></figure>
<h2 id="Fungsi-Operator"><a href="#Fungsi-Operator" class="headerlink" title="Fungsi Operator"></a>Fungsi Operator</h2><p>Membuat struktur tipe data baru saja tidak cukup. Agar tipe data yang telah kita buat dapat digunakan dengan baik, selain mendeklarasikan strukturnya, kita juga harus membuatkan fungsi-fungsi untuk mengoperasikan tipe data tersebut. Berdasarkan kategori penggunaannya, ada empat jenis fungsi operator yang biasanya dibuat setiap membuat tipe data baru yaitu:</p>
<ul>
<li><strong>Fungsi konstruktor</strong>: fungsi yang digunakan untuk membentuk tipe data baru</li>
<li><strong>Fungsi selector</strong>: fungsi yang digunakan untuk mendapatkan nilai komponen atau nilai tertentu dari tipe data baru</li>
<li><strong>Fungsi validator</strong>: fungsi yang digunakan untuk memastikan bahwa nilai yang diinputkan pada komponen tipe data valid sesuai logika yang dibuat.</li>
<li><strong>Fungsi manipulasi</strong>: fungsi untuk melakukan berbagai macam memanipulasi tipe data yang telah dibuat.</li>
</ul>
<p>Berikut adalah dua contoh fungsi konstruktor yang digunakan untuk membuat tipe data <strong>time</strong> dengan menggunakan dua alternatif cara:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function">time <span class="title">make_time</span><span class="params">(<span class="keyword">int</span> j, <span class="keyword">int</span> m, <span class="keyword">int</span> d)</span></span></div><div class="line">&#123;</div><div class="line">  time waktu;</div><div class="line">  waktu.j = j;</div><div class="line">  waktu.m = m;</div><div class="line">  waktu.d = d;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> waktu;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">time <span class="title">seconds_2_time</span><span class="params">(<span class="keyword">int</span> seconds)</span></span></div><div class="line">&#123;</div><div class="line">    time waktu;</div><div class="line">    waktu.jam = seconds / <span class="number">3600</span>;</div><div class="line">    waktu.menit = (seconds % <span class="number">3600</span>) / <span class="number">60</span>;</div><div class="line">    waktu.detik = seconds % <span class="number">60</span>;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> time;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    time new_time1 = make_time(<span class="number">5</span>, <span class="number">30</span>, <span class="number">25</span>);</div><div class="line">    time new_time2 = seconds_2_time(<span class="number">3755</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Fungsi <code>make_time</code> adalah contoh fungsi konstruktor paling sederhana, di mana fungsi tersebut hanya menerima inputan untuk komponen struktur melalui parameter dengan jumlah yang sama persis dengan komponen struktur dan tidak melakukan validasi apapun. Meskipun fungsi tersebut sangat sederhana, tapi dengan menggunakan fungsi konstruktor tersebut minimal kita dapat menghemat waktu inisialisasi atau pengisian nilai pada tipe data waktu jika dibanding dengan cara manual mengisi komponen satu persatu. Sedangkan fungsi <code>seconds_2_time</code> juga adalah konstruktor untuk tipe data <strong>time</strong>. Fungsi ini menggunakan pendekatan yang berbeda yaitu dengan mengonversi nilai detik yang diberikan pada parameter dan merubahnya ke dalam tipe data waktu.</p>
<p>Selanjutnya untuk contoh fungsi selektor diberikan pada koding di bawah ini:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_hour</span><span class="params">(time waktu)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> waktu.jam;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_second</span><span class="params">(time waktu)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> waktu.jam;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">time_2_second</span><span class="params">(time waktu)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> ((waktu.jam * <span class="number">3600</span>) + (waktu.menit * <span class="number">60</span>) + waktu.detik);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Pada contoh yang diberikan di atas fungsi <code>get_hour</code> dan <code>get_second</code> merupakan contoh fungsi sederhana dari selector. Yang dilakukan kedua fungsi tersebut hanya mengembalikan nilai jam dan detik dalam satuan <em>integer</em>. Adapun fungsi <code>time_2_second</code> merupakan contoh pengembalian nilai tertentu dari tipe data waktu dalam bentuk khusus, yang dalam kasus ini mengembalikan jumlah detik dari satuan waktu yang diberikan pada parameter.</p>
<p>Fungsi validator bertujuan untuk memastikan satuan waktu yang diinputkan sudah valid sesuai dengan logika yang diinginkan. Berikut ini adalah contoh fungsi validator beserta implementasinya dalam konstruktor:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">valid_time</span><span class="params">(time waktu)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> (((waktu.jam &gt;= <span class="number">0</span>) &amp;&amp; (waktu.jam &lt; <span class="number">24</span>)) &amp;&amp; </div><div class="line">            ((waktu.menit &gt;= <span class="number">0</span>) &amp;&amp; (waktu.menit &lt; <span class="number">60</span>)) &amp;&amp;</div><div class="line">            ((waktu.detik &gt;= <span class="number">0</span>) &amp;&amp; (waktu.detik) &lt; <span class="number">60</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// pengembangan fungsi konstruktor dengan validasi</span></div><div class="line"><span class="function">time <span class="title">make_time</span><span class="params">(<span class="keyword">int</span> jam, <span class="keyword">int</span> menit, <span class="keyword">int</span> detik)</span></span></div><div class="line">&#123;</div><div class="line">  time waktu;</div><div class="line">  waktu.j = j;</div><div class="line">  waktu.m = m;</div><div class="line">  waktu.d = d;</div><div class="line"></div><div class="line">  <span class="keyword">if</span>(valid_time(waktu))</div><div class="line">    <span class="keyword">return</span> waktu;</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="keyword">return</span> make_time(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    time waktu1 = make_time(<span class="number">5</span>, <span class="number">23</span>, <span class="number">50</span>); <span class="comment">// -&gt; 5:23:50</span></div><div class="line">    time waktu2 = make_time(<span class="number">20</span>, <span class="number">87</span>, <span class="number">-9</span>); <span class="comment">// -&gt; 0:0:0</span></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dalam perjalanan pembuatan program, ada kalanya kita memerlukan tipe data baru yang tidak terdefinisikan sebelumnya pada sebuah bahasa pemrograman. Misalkan untuk menyimpan nilai waktu kita memerlukan tiga variabel yang saling terhubung, yaitu tiga variabel dengan tipe data integer untuk meyimpan nilai jam, menit, dan detik. Jika menggunakan cara konvensional yaitu mendeklarasikan tiga variabel secara manual kemudian mengisikan nilainya, maka akan cukup merepotkan. Belum lagi jika data waktu yang perlu kita simpan dan manipulasi lebih dari satu dan perlu disimpan dengan menggunakan &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="bahasa C" scheme="http://labdaspro.github.io/categories/bahasa-C/"/>
    
      <category term="tipe data" scheme="http://labdaspro.github.io/categories/bahasa-C/tipe-data/"/>
    
      <category term="struct" scheme="http://labdaspro.github.io/categories/bahasa-C/tipe-data/struct/"/>
    
    
      <category term="struct" scheme="http://labdaspro.github.io/tags/struct/"/>
    
      <category term="class" scheme="http://labdaspro.github.io/tags/class/"/>
    
      <category term="abstract data type" scheme="http://labdaspro.github.io/tags/abstract-data-type/"/>
    
      <category term="tipe data" scheme="http://labdaspro.github.io/tags/tipe-data/"/>
    
  </entry>
  
  <entry>
    <title>Fungsi</title>
    <link href="http://labdaspro.github.io/2017/06/02/Fungsi/"/>
    <id>http://labdaspro.github.io/2017/06/02/Fungsi/</id>
    <published>2017-06-02T08:13:27.000Z</published>
    <updated>2017-06-02T09:01:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Fungsi merupakan suatu bagian program yang dimaksudkan untuk mengerjakan tugas tertentu dan letaknya terpisah dari program yang memanggilnya.</p>
<p>Dalam setiap program dalam bahasa C, minimal terdapat satu buah fungsi yaitu fungsi <code>main()</code>. Berikut adalah contoh pembuatan fungsi dalam bahasa C.</p>
<p>Kentungan dalam penggunaan fungsi meliputi:</p>
<ul>
<li>Program akan memiliki struktur yang jelas (mempunyai readability yang tinggi)</li>
<li>Bersifat reusability (dapat digunakan kembali) sehingga akan menghindari penulisan program yang sama.</li>
</ul>
<p>Dalam bahasa C, fungsi dapat diklasifikasikan menjadi dua yaitu:</p>
<ol>
<li>Fungsi pustaka atau fungsi yang telah tersedia dalam Bahasa C.</li>
<li>Fungsi yang didefinisikan atau dibuat oleh programmer.</li>
</ol>
<p>Cara membuat fungsi sendiri dalam bahasa C adalah sebagai berikut:</p>
<p>Sebelum digunakan (dipanggil), suatu fungsi harus dideklarasikan dan didefinisikan terlebih dahulu.<br>Bentuk umum pendeklarasian fungsi adalah :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tipe_fungsi nama_fungsi(parameter_fungsi);</div></pre></td></tr></table></figure>
<p>Sedangkan bentuk umum pendefinisian fungsi adalah :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tipe_fungsi nama_fungsi(parameter_fungsi)</div><div class="line">&#123; </div><div class="line">    statement</div><div class="line">    statement</div><div class="line">    ………...</div><div class="line">    ………...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_array</span><span class="params">(<span class="keyword">int</span> * data, <span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, data[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Fungsi merupakan suatu bagian program yang dimaksudkan untuk mengerjakan tugas tertentu dan letaknya terpisah dari program yang memanggil
    
    </summary>
    
    
      <category term="fungsi" scheme="http://labdaspro.github.io/tags/fungsi/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://labdaspro.github.io/2017/06/02/hello-world/"/>
    <id>http://labdaspro.github.io/2017/06/02/hello-world/</id>
    <published>2017-06-02T07:10:28.000Z</published>
    <updated>2017-06-02T07:10:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
